1. git으로 관리핟 경로까지 이동

1.1  브랜치 기본이름 변경하기(master 일때)
    git config --global init.defaultBranch main
    
    git branch -M main ( 현재 브랜치명 수정 )

2. Git 설정 : 처음 Git을 설치한 후, 사용자 정보를 설정해야 한다.
   commit 이전에 계정 정보 등록(--global 옵션은 해당컴퓨터 전체에 적용) 

  git config --global user.name "Your Name"         // github user 이름으로  WindyRaiser
  git config --global user.email "you@example.com"  // kant2000@naver.com 으로 메일 등록


3. 새로운 Git 저장소 만들기 (현재 디렉토리가 Git 저장소로 초기화된다.)
   초기화(.git 폴더 행성 - 숨겨져 있음)   : 
    git init

4. 기존 프로젝트를 Git 저장소로 만들기
    cd your-project-directory
    git init
    git add .
    git commit -m "Initial commit"
   
    프로젝트 디렉토리로 이동한 후, git init 명령어로 초기화하고 파일을 추가한 후 커밋합니다.

5. 원격 저장소 추가하기
    GitHub, GitLab 또는 Bitbucket 등의 원격 저장소와 로컬 저장소를 연결합니다.

    git remote add [리모트 이름] [github 리파지토리 주소] 
    git remote add origin https://github.com/yourusername/your-repository.git


6. git 파일 상태 확인하기
    git status
    현재 파일의 상태를 확인할 수 있습니다. 수정된 파일, 추가되지 않은 파일 등을 보여줍니다.


7. 파일을 스테이징 하기
    git으로 관리하는 파일 추가
    
    git add .
    변경된 모든 파일을 스테이징합니다.

    git add <filename>
    특정 파일을 스테이징합니다.

8. 변경사항을 커밋하기 : commit(해당 시점을 저장)

    git commit -m "Your commit message"
    스테이징된 변경 사항을 커밋하여 저장소에 반영합니다.

9. 원격 저장소에 푸시하기
    git push origin main

8. commit 정보 확인
    git log

9.과제 
proejct_5/test를 생성
git으로 관리
파일 생성은 알아서... 최소 커밋의 수는 5번 이상 되도록 하세요. 


rm -rf .git

==============================================================
로컬 컴퓨터(코드있음)와 github사이트(비어있음) 연결
1. remote 정보 확인
    git remote
    git remote -v

2. remote 추가
git remote add [리모트 이름] [github 리파지토리 주소] 
git remote add origin https://github.com/WindyRaiser/project5_work1.git

3. remote 삭제해야 하는 경우
git remote rm 리모트 이름
git remote rm origin

4. github 데이터 넣기
git push -u origin main
git push

=======================================================
9. 원격 저장소에 푸시 하기
    git push origin main
    로컬 저장소의 변경 사항을 원격 저장소에 푸시합니다. 여기서 main은 브랜치 이름입니다.

10. 원격 저장소에서 변경사항 가져오기
    git pull origin main
    원격 저장소의 변경 사항을 로컬 저장소로 가져옵니다.

11. 브랜치 사용하기
브랜치를 사용하면 독립된 환경에서 작업을 진행할 수 있습니다.
    브랜치 생성 및 전환:
    git checkout -b new-branch-name

    브랜치 목록 보기:
    git brahch

    브랜치 전환:
    git checkout branch-name

    브랜치 병합:
    git merge branch-name

12. 로그 확인하기
    git log